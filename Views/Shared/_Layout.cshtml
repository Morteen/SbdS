@model SbdS.Models.ViewModel
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - My ASP.NET Application</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("SbdS", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Home", "Index", "Home")</li>
                    <li>@Html.ActionLink("About", "About", "Home")</li>
                    <li>@Html.ActionLink("Contact", "Contact", "Home")</li>
                </ul>


                @if (Session["UserId"] != null)
                {


                    if (Session["IsAdmin"].Equals("Admin"))
                    {
                        <ul class="nav navbar-nav ">
                            <li>
                                <a href="#" onclick="SbdSCourse()">Kursliste </a>
                            </li>
                            <li>
                                <a href="#" onclick="Students()" id="showStudent">Elevliste </a>
                            </li>
                            <li>
                                <a href="#" onclick="StudensAtCourse()" id="showStudent">Elver på kurs </a>
                            </li>
                        </ul>
                        <ul class="nav navbar-nav navbar-right">
                            <li>


                                <a href="#">Hei @Session["UserName"] </a>

                            </li>
                            <li>
                                @Html.ActionLink("Logg ut", "LogOut", "Students");
                            </li>

                        </ul>
                        //Slutt på Admin delen
                    }
                    else
                    {
                        <ul class="nav navbar-nav ">
                            <li>
                                <a href="#" onclick="Course()">Vis kursliste </a>
                            </li>
                            <li>
                                <a href="#" onclick="MyCourse()" id="showCourse">Mine kurs </a>
                            </li>
                        </ul>
                        <ul class="nav navbar-nav navbar-right">
                            <li>


                                <a href="#">Hei @Session["UserName"] </a>

                            </li>
                            <li>
                                @Html.ActionLink("Logg ut", "LogOut", "Students");
                            </li>

                        </ul>
                    }
                    //Slutt på studentdelen

                }
                else
                {<ul class="nav navbar-nav navbar-right">
                    <li>

                        <a href="#" onclick="ShowRegModal()">Registrer </a>

                    </li>
                    <li>
                        <a href="#" onclick="Login()">Login </a>
                    </li>

                </ul>
                }


            </div>
        </div>
    </div>
    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p>
                &copy; @DateTime.Now.Year - SbdS Morten Olsen
            </p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
</body>
</html>
<div id="LoginModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content"style="background-image: url('../../Content/images/FullSizeRender.jpg');">

            <div class="modal-body">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                @*Legg login her*@

                <div>

                    <form id="myForm1">
                        @Html.AntiForgeryToken()
                       
                       Brukernavn name: <input type="text" name="username"class = "form-control"><br>
                       Passord: <input type="text" name="password"class = "form-control"><br>
                       
                            


                        <a href="#" id="btnSubmit" onclick="confirmLogin()" class="btn btn-success ">Login </a>

                    </form>




                    <div style="text-align:center;display:none" id="loaderDiv">




                      
                        <img src="~/Content/images/slowloader.jpg" />


                    </div>








                </div>


                @*Slutt på login*@
            </div><!--Body-->
            <div class="modal-footer">
                <a href="#" class="btn btn-default" data-dismiss="modal">Avbryt</a>
               
</div>

        </div>

    </div>
</div>



 <div id="myRegModal" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">

                <div class="modal-body">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <!--Regform i modal-->


                    <h4>Registrer deg ved SbdS.</h4>
                    <hr />

                    @using (Html.BeginForm("Create","Students",FormMethod.Post,new { id = "myRegForm" })){

      @Html.AntiForgeryToken()
                         <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Student.Fname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*<input class="form-control"" type="text" name="fname" />*@
                @Html.EditorFor(model => model.Student.Fname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.Fname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.Lname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.Lname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.Lname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.Adr, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.Adr, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.Adr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.Username, new { htmlAttributes = new { @class = "form-control", id = "username" } })
                <div id="status"></div>@Html.ValidationMessageFor(model => model.Student.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.Age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.Age, new { htmlAttributes = new { @class = "form-control"  } })
                @Html.ValidationMessageFor(model => model.Student.Age, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.ParentName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.ParentName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.ParentName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Student.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @*<input type="submit" value="Create" class="btn btn-default" />*@
                <a href="#" class="btn btn-default" onclick="confirmReg()">Registrer</a>
            </div>
        </div>
    </div>


               
                    }@*slut på htmlhelper regform*@
                    <!--Slutt på regform i modal-->
                </div><!--Body-->
                <div class="modal-footer">
                    <a href="#" class="btn btn-default" data-dismiss="modal">Avbryt</a>
                   
                </div>
            </div>
        </div>
    </div>
    <!--Slutt på Regmodal-->






     
 



<script>
    $(document).ready(function () { })

    function Login(){

        $("#LoginModal").modal("show");

        
    }
    
            

        

    function ShowRegModal() {
        $("#myRegModal").modal("show");
    }


    function confirmReg() {

        var data = $("#myRegForm").serialize();
        alert(data);

        $("#loaderDiv").show();
        $.ajax({
            type: "POST",
            url: "/Students/Create",
            data: data,
            success: function (result) {
                $("#loaderDiv").hide();

                $("#myRegModal").modal("hide");
                if (result) {
                   alert("Du er registrert \n Vennligst Login")
                } 

            },
            error: function (xhr, status, error) {
                alert("Her er det noe feil" + error);
                $("#loaderDiv").hide();
                $("#myRegModal").modal('hide');
            }

        })






    }



    function confirmLogin() {
        var data = $("#myForm1").serialize();
       
        $("#loaderDiv").show();
        $.ajax({
            type: "POST",
            url: "/Students/Login",
            data: data,
            success: function (result) {       
                $("#loaderDiv").hide();

                $("#LoginModal").modal("hide");
                if(result){
                    window.location.href = "/Students/LoggedInAdmin";
                } else {
                    window.location.href = "/Students/LoggedInStudent";
                }

            },
            error: function (xhr, status, error) {
                alert("Passord eller brukernavn er galt - " + error);
                $("#loaderDiv").hide();
                $("#LoginModal").modal('hide');
            }

        })











    }


    $("#username").keyup(function () {
        var username = $("#username").val();
       
        $("#status").html("Leter..");
        if (username != "") {
            //$("#status").html(data);
            $.ajax({
                type: "POST",
                url: "/Students/UsernameTest",
                data: username,
                success: function (result) {
                    if(result!=null){ 
                        $("#status").html(result+" er brukt");
                    } else {
                        $("#status").html("");
                    }

                },

                error: function (xhr, status, error) {
                    alert("Noe er galt " + error);
                   
                }


            })


        }
        

    });


    





</script>

